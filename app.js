(function(){
  'use strict';

  // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ init: —Å—Ä–∞–∑—É –µ—Å–ª–∏ DOM –≥–æ—Ç–æ–≤, –∏–Ω–∞—á–µ –ø–æ DOMContentLoaded
  function ready(run){
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', run, { once: true });
    } else {
      run();
    }
  }

  ready(function init(){
    function $(s,r){return (r||document).querySelector(s)} function $all(s,r){return (r||document).querySelectorAll(s)} function on(e,t,c,o){e&&e.addEventListener(t,c,o||false)}

    var tg=(window.Telegram&&window.Telegram.WebApp)?window.Telegram.WebApp:null;
    if(tg){ tg.expand&&tg.expand(); tg.ready&&tg.ready(); }

    var backBtn=tg&&tg.BackButton?tg.BackButton:null; function showBack(){backBtn&&backBtn.show&&backBtn.show()} function hideBack(){backBtn&&backBtn.hide&&backBtn.hide()} hideBack();
    tg&&tg.onEvent&&tg.onEvent('back_button_pressed', function(){ closeDetails(); });

    var activities = [
      { type:'sea',   date:'29.12.2025', text:'–ü–ª—è–∂ –î–∂–æ–º—Ç—å–µ–Ω + –¥–µ—Ç—Å–∫–∞—è –∑–æ–Ω–∞' },
      { type:'sea',   date:'30.12.2025', text:'–ü–ª—è–∂ –í–æ–Ω–≥–∞–º–∞—Ç + –≤–æ–¥–Ω—ã–µ –≥–æ—Ä–∫–∏' },
      { type:'sight', date:'31.12.2025', text:'–í–∞—Ç –Ø–Ω—Å–∞–Ω–≥–≤–∞—Ä–∞–º + –ø—Ä–æ–≥—É–ª–∫–∞ –ø–æ –ø–∞—Ä–∫—É' },
      { type:'sea',   date:'01.01.2026', text:'–ü–ª—è–∂ –ü–∞—Ç—Ç–∞–π—è + Underwater World' },
      { type:'sea',   date:'02.01.2026', text:'–ú–æ—Ä—Å–∫–∞—è –ø—Ä–æ–≥—É–ª–∫–∞ –∫ –ö–æ –õ–∞–Ω (—Å–Ω–æ—Ä–∫–ª–∏–Ω–≥)' },
      { type:'sight', date:'03.01.2026', text:'–°–∞–¥ –ù–æ–Ω–≥ –ù—É—á + —à–æ—É —Å–ª–æ–Ω–æ–≤' },
      { type:'sea',   date:'04.01.2026', text:'–ü–ª—è–∂ –î–∂–æ–º—Ç—å–µ–Ω' },
      { type:'sea',   date:'05.01.2026', text:'–ü–ª—è–∂ –í–æ–Ω–≥–∞–º–∞—Ç + –∞—Ä–µ–Ω–¥–∞ –±–∞–π–∫–∞' },
      { type:'sight', date:'06.01.2026', text:'–í–∞—Ç –ö—Ö–∞–æ –ü—Ö—Ä–∞ –ë–∞—Ç + –æ–±–∑–æ—Ä–Ω–∞—è –ø–ª–æ—â–∞–¥–∫–∞' },
      { type:'sea',   date:'07.01.2026', text:'–ú–æ—Ä—Å–∫–∞—è –ø—Ä–æ–≥—É–ª–∫–∞ –∫ –ö–æ –°–∏—á–∞–Ω–≥' },
      { type:'sea',   date:'08.01.2026', text:'–ü–ª—è–∂ –ü–∞—Ç—Ç–∞–π—è' },
      { type:'sight', date:'09.01.2026', text:'Dolphin World + –¥–µ—Ç—Å–∫–∞—è –∑–æ–Ω–∞' },
      { type:'sea',   date:'10.01.2026', text:'–ü–ª—è–∂ –î–∂–æ–º—Ç—å–µ–Ω' },
      { type:'sight', date:'11.01.2026', text:'–ë–∞—Ç–∏—Å–∫–∞—Ñ (12.969175,100.888124)' },
      { type:'sight', date:'12.01.2026', text:'Art in Paradise + –ø–ª–∞–≤—É—á–∏–π —Ä—ã–Ω–æ–∫' },
      { type:'sea',   date:'13.01.2026', text:'–ü–ª—è–∂ –í–æ–Ω–≥–∞–º–∞—Ç' },
      { type:'sea',   date:'14.01.2026', text:'–ü–ª—è–∂ –ü–∞—Ç—Ç–∞–π—è' },
      { type:'sight', date:'15.01.2026', text:'–ú–∏–Ω–∏-–°–∏–∞–º + –¥–µ—Ç—Å–∫–∏–µ –∞—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω—ã' },
      { type:'sea',   date:'16.01.2026', text:'–ú–æ—Ä—Å–∫–∞—è –ø—Ä–æ–≥—É–ª–∫–∞ –∫ –ö–æ –õ–∞–Ω' },
      { type:'sea',   date:'17.01.2026', text:'–ü–ª—è–∂ –î–∂–æ–º—Ç—å–µ–Ω' },
      { type:'sight', date:'18.01.2026', text:'Sea Life Pattaya (–∞–∫–≤–∞—Ä–∏—É–º)' },
      { type:'sea',   date:'19.01.2026', text:'–ü–ª—è–∂ –í–æ–Ω–≥–∞–º–∞—Ç' },
      { type:'sea',   date:'20.01.2026', text:'–ü–ª—è–∂ –ü–∞—Ç—Ç–∞–π—è' },
      { type:'sight', date:'21.01.2026', text:'–í–∞—Ç –ü—Ö—Ä–∞ –Ø–π + –ø–∞—Ä–∫ –õ—é–∫—Å–æ—Ä' },
      { type:'sea',   date:'22.01.2026', text:'–ü–ª—è–∂ –î–∂–æ–º—Ç—å–µ–Ω' },
      { type:'sea',   date:'23.01.2026', text:'–ü–ª—è–∂ –í–æ–Ω–≥–∞–º–∞—Ç' },
      { type:'sight', date:'24.01.2026', text:'Central Festival + —Ñ—É–¥-–∫–æ—Ä—Ç' },
      { type:'sea',   date:'25.01.2026', text:'–ü–ª—è–∂ –ü–∞—Ç—Ç–∞–π—è' }
    ];

    var cardsWrap=$('#cards'), skeletons=$('#skeletons'), emptyState=$('#emptyState'), filters=$all('.filter'), tabs=$all('.tab');
    var overlay=$('#overlay'), details=$('#details'), closeBtn=$('#closeBtn'), detailsTitle=$('#detailsTitle'), scheduleList=$('#scheduleList'), resetFilters=$('#resetFilters'), countdownBtn=$('#countdownBtn');

    if(overlay){ overlay.style.display='none'; overlay.classList.add('hidden'); overlay.setAttribute('aria-hidden','true'); }
    if(details){ details.style.display='none'; details.classList.add('hidden'); }

    function add(hh,mm,addMin){ var d=new Date(2000,0,1,hh,mm,0); d.setMinutes(d.getMinutes()+addMin); return ('0'+d.getHours()).slice(-2)+':'+('0'+d.getMinutes()).slice(-2); }
    function t(s){ var a=s.split(':'); return {h:+a[0], m:+a[1]}; }
    function parseDMY(dmy){ var m=/^(\d{2})\.(\d{2})\.(\d{4})$/.exec(dmy); if(!m) return null; return new Date(+m[3],+m[2]-1,+m[1],0,0,0,0); }
    function daysUntil(start){ if(!start) return null; var now=new Date(); var startUTC=Date.UTC(start.getFullYear(),start.getMonth(),start.getDate()); var todayUTC=Date.UTC(now.getFullYear(),now.getMonth(),now.getDate()); return Math.ceil((startUTC-todayUTC)/86400000); }
    function updateCountdown(){ if(!countdownBtn) return; var start=parseDMY(activities[0]&&activities[0].date); var d=daysUntil(start); countdownBtn.textContent=(d>0)?('‚è≥ –î–æ –ø–æ–µ–∑–¥–∫–∏: '+d+' –¥–Ω–µ–π'):(d===0?'üéí –ü–æ–µ–∑–¥–∫–∞ —Å–µ–≥–æ–¥–Ω—è':'üèùÔ∏è –ü–æ–µ–∑–¥–∫–∞ –Ω–∞—á–∞–ª–∞—Å—å'); }
    updateCountdown(); setInterval(updateCountdown, 3600000);

    function generateSchedule(act){
      var departAt='09:00', travelSea=40, travelSight=30, buf=10, rows=[];
      rows.push(departAt+' ‚Äî –í—ã—Ö–æ–¥ –∏–∑ –¥–æ–º–∞ (–≤–æ–¥–∞ 1 –ª/—á–µ–ª., SPF 50+, —à–ª—è–ø—ã, –Ω–∞–ª–∏—á–Ω—ã–µ)');
      var trvl=(act.type==='sea')?travelSea:travelSight; var arr1=add(t(departAt).h,t(departAt).m,trvl);
      rows.push(departAt+'‚Äì'+arr1+' ‚Äî –î–æ—Ä–æ–≥–∞ ('+trvl+' –º–∏–Ω)');
      if(act.type==='sea'){ var loc=act.text.split(' +')[0];
        var startSea=add(t(arr1).h,t(arr1).m,buf), endSea1=add(t(startSea).h,t(startSea).m,150);
        rows.push(startSea+'‚Äì'+endSea1+' ‚Äî –ü–ª—è–∂ '+loc+' (—Ç–µ–Ω—å/–∑–æ–Ω—Ç, –∫—É–ø–∞–Ω–∏–µ)');
        var startLunch=add(t(endSea1).h,t(endSea1).m,buf), endLunch=add(t(startLunch).h,t(startLunch).m,60);
        rows.push(startLunch+'‚Äì'+endLunch+' ‚Äî –û–±–µ–¥ —Ä—è–¥–æ–º');
        var startSea2=add(t(endLunch).h,t(endLunch).m,buf), endSea2=add(t(startSea2).h,t(startSea2).m,120);
        rows.push(startSea2+'‚Äì'+endSea2+' ‚Äî –ü–ª—è–∂ '+loc);
        var startBack=add(t(endSea2).h,t(endSea2).m,buf), endBack=add(t(startBack).h,t(startBack).m,trvl);
        rows.push(startBack+'‚Äì'+endBack+' ‚Äî –î–æ—Ä–æ–≥–∞ –¥–æ–º–æ–π'); rows.push(endBack+' ‚Äî –í–µ—á–µ—Ä');
      } else { var parts=act.text.split(' +'), main=parts[0], sub=parts[1]||'–±–ª–∏–∂–∞–π—à–∞—è –ª–æ–∫–∞—Ü–∏—è';
        var startMain=add(t(arr1).h,t(arr1).m,buf), endMain=add(t(startMain).h,t(startMain).m,120);
        rows.push(startMain+'‚Äì'+endMain+' ‚Äî '+main);
        var startSub=add(t(endMain).h,t(endMain).m,buf), endSub=add(t(startSub).h,t(startSub).m,120);
        rows.push(startSub+'‚Äì'+endSub+' ‚Äî '+sub);
        var startBackS=add(t(endSub).h,t(endSub).m,buf), endBackS=add(t(startBackS).h,t(startBackS).m,trvl);
        rows.push(startBackS+'‚Äì'+endBackS+' ‚Äî –î–æ—Ä–æ–≥–∞ –¥–æ–º–æ–π');
      }
      return rows;
    }

    function showModal(){ overlay.style.display='block'; details.style.display='block'; overlay.classList.remove('hidden'); details.classList.remove('hidden'); overlay.setAttribute('aria-hidden','false'); showBack(); }
    function hideModal(){ overlay.style.display='none'; details.style.display='none'; overlay.classList.add('hidden'); details.classList.add('hidden'); overlay.setAttribute('aria-hidden','true'); hideBack(); }

    function openDetails(idx){
      var act=activities[idx]; if(!act) return;
      detailsTitle.textContent='–î–µ–Ω—å '+(idx+1)+' ‚Ä¢ '+act.date;
      scheduleList.innerHTML='';
      var plan=generateSchedule(act);
      for(var i=0;i<plan.length;i++){ var li=document.createElement('li'); li.textContent=plan[i]; scheduleList.appendChild(li); }
      if (tg && tg.HapticFeedback && typeof tg.HapticFeedback.impactOccurred==='function'){ try { tg.HapticFeedback.impactOccurred('medium'); } catch(e){} }
      showModal();
    }
    function closeDetails(){ hideModal(); }
    on(overlay,'click',closeDetails); on(closeBtn,'click',closeDetails);

    function renderCards(list){
      cardsWrap.innerHTML='';
      for (var i=0;i<list.length;i++){
        var a=list[i], card=document.createElement('button');
        card.type='button'; card.className='card '+a.type; card.setAttribute('data-index', String(i));
        card.innerHTML='<div class="card-header">'+(i+1)+'. '+a.date+'</div><div class="card-body">'+a.text+'</div>';
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞ —Å–∞–º—É –∫–∞—Ä—Ç–æ—á–∫—É
        on(card,'click',function(){ var idx=Number(this.getAttribute('data-index')); if(!isNaN(idx)) openDetails(idx); });
        cardsWrap.appendChild(card);
      }
      cardsWrap.classList.remove('hidden');
      cardsWrap.setAttribute('aria-busy','false');
      if (skeletons && skeletons.parentNode){ skeletons.parentNode.removeChild(skeletons); }
      // –î–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ (–ø–æ–¥—Å—Ç—Ä–∞—Ö–æ–≤–∫–∞)
      on(cardsWrap,'click',function(e){ var el=e.target.closest?e.target.closest('.card'):null; if(!el) return; var i=Number(el.getAttribute('data-index')); if(!isNaN(i)) openDetails(i); });
    }
    renderCards(activities);

    function showTab(id){ var panels=$all('.tab-content'); for (var i=0;i<panels.length;i++) panels[i].classList.add('hidden'); var p=document.getElementById(id); if (p) p.classList.remove('hidden'); for (var j=0;j<tabs.length;j++) tabs[j].classList.toggle('active', tabs[j].dataset.tab===id); }
    for (var t=0;t<tabs.length;t++){ (function(btn){ on(btn,'click',function(){ showTab(btn.dataset.tab); }); })(tabs[t]); }

    function applyFilter(type){
      for (var i=0;i<filters.length;i++){ var active=(filters[i].dataset.filter===type)||(type==='all'&&filters[i].dataset.filter==='all'); filters[i].classList.toggle('active', active); filters[i].setAttribute('aria-pressed', active?'true':'false'); }
      var cards = $all('#cards .card'); var visible=0;
      for (var k=0;k<cards.length;k++){ var show=(type==='all'||cards[k].classList.contains(type)); cards[k].style.display = show ? 'flex' : 'none'; if (show) visible++; }
      emptyState.classList.toggle('hidden', visible>0);
    }
    for (var f=0;f<filters.length;f++){ (function(btn){ var type=btn.dataset.filter; on(btn,'click',function(){ applyFilter(type); }); })(filters[f]); }
    on(resetFilters,'click',function(){ applyFilter('all'); });
  });
})();
