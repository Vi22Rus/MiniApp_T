(function(){
  'use strict';

  // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ init
  function ready(run){
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', run, { once:true });
    } else {
      run();
    }
  }

  ready(function init(){
    const $ = (s,r)=> (r||document).querySelector(s);
    const $all = (s,r)=> (r||document).querySelectorAll(s);
    const on = (e,t,c,o)=>{ if(e) e.addEventListener(t,c,o||false); };

    // Telegram SDK
    const tg = (window.Telegram && window.Telegram.WebApp) ? window.Telegram.WebApp : null;
    if (tg){ tg.expand && tg.expand(); tg.ready && tg.ready(); }

    // BackButton
    const backBtn = (tg && tg.BackButton) ? tg.BackButton : null;
    const showBack = ()=>{ if (backBtn && typeof backBtn.show==='function') backBtn.show(); };
    const hideBack = ()=>{ if (backBtn && typeof backBtn.hide==='function') backBtn.hide(); };
    hideBack();
    tg && tg.onEvent && tg.onEvent('back_button_pressed', ()=> closeDetails());

    // –î–∞–Ω–Ω—ã–µ –ø–æ–µ–∑–¥–∫–∏ (—Å –±–∞–∑–æ–≤–æ–π –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–π –∏–Ω—Ñ–æ–π)
    const activities = [
      { type:'sight', date:'31.12.2025', title:'–í–∞—Ç –Ø–Ω (Wat Yansangwararam)',
        gps:{lat:12.7889,lng:100.9581}, open:'–µ–∂–µ–¥–Ω. ~08:00‚Äì17:00', price:'–¥–æ–Ω–µ–π—à–Ω',
        transport:[
          '–°–æ–Ω–≥—Ç–µ–æ: —Ü–µ–Ω—Ç—Ä‚Üí–°—É–∫—Ö—É–º–≤–∏—Ç (10+20 –±–∞—Ç), –¥–∞–ª–µ–µ —Ç–∞–∫—Å–∏',
          '–¢—É–∫‚Äë—Ç—É–∫ (–∫–∞–∫ —Ç–∞–∫—Å–∏): –æ—Ç 100 –±–∞—Ç'
        ],
        lunch:[ '–§—É–¥–∫–æ—Ä—Ç Central Festival (11:00‚Äì23:00)' ],
        tips:[ '–î—Ä–µ—Å—Å‚Äë–∫–æ–¥: –∑–∞–∫—Ä—ã—Ç—ã–µ –ø–ª–µ—á–∏/–∫–æ–ª–µ–Ω–∏', '–ü–∏—Ç—å –±—É—Ç–∏–ª–∏—Ä–æ–≤–∞–Ω–Ω—É—é –≤–æ–¥—É' ]
      },
      { type:'sea', date:'01.01.2026', title:'–ü–ª—è–∂ –î–∂–æ–º—Ç—å–µ–Ω',
        gps:{lat:12.8750,lng:100.8889}, open:'24/7', price:'–±–µ—Å–ø–ª–∞—Ç–Ω–æ',
        transport:[ '–°–æ–Ω–≥—Ç–µ–æ —Ü–µ–Ω—Ç—Ä‚Üî–î–∂–æ–º—Ç—å–µ–Ω: 10 –±–∞—Ç', '–ë–µ–ª—ã–µ —Å–æ–Ω–≥—Ç–µ–æ –ø–æ –°—É–∫—Ö—É–º–≤–∏—Ç: 20 –±–∞—Ç' ],
        lunch:[ 'The Glass House: –±–ª—é–¥–∞ ~200‚Äì500 –±–∞—Ç' ],
        tips:[ '–õ—É—á—à–µ–µ –≤—Ä–µ–º—è: –¥–æ 11:00 –∏ –ø–æ—Å–ª–µ 16:00', 'SPF –∏ –≤–æ–¥–∞ 1 –ª/—á–µ–ª.' ]
      },
      { type:'sight', date:'24.01.2026', title:'Central Festival Pattaya',
        gps:{lat:12.934546,lng:100.883775}, open:'–µ–∂–µ–¥–Ω. 11:00‚Äì23:00', price:'–≤—Ö–æ–¥ —Å–≤–æ–±–æ–¥–Ω—ã–π',
        transport:[ '–°–æ–Ω–≥—Ç–µ–æ –ø–æ Beach/Second Rd: 10 –±–∞—Ç' ],
        lunch:[ '–§—É–¥–∫–æ—Ä—Ç: –±–æ–ª—å—à–æ–π –≤—ã–±–æ—Ä, –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä' ],
        tips:[ '–£–¥–æ–±–Ω—ã–π –æ—Ä–∏–µ–Ω—Ç–∏—Ä –≤ —Ü–µ–Ω—Ç—Ä–µ', '–ï—Å—Ç—å –∑–æ–Ω—ã –æ—Ç–¥—ã—Ö–∞' ]
      },
      // –î–æ–±–∞–≤—å—Ç–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –¥–Ω–∏ –ø–æ –∞–Ω–∞–ª–æ–≥–∏–∏‚Ä¶
      { type:'sea',   date:'29.12.2025', title:'–ü–ª—è–∂ –í–æ–Ω–≥–∞–º–∞—Ç' },
      { type:'sight', date:'03.01.2026', title:'–°–∞–¥ –ù–æ–Ω–≥ –ù—É—á' },
      { type:'sea',   date:'02.01.2026', title:'–ö–æ –õ–∞–Ω (—Å–Ω–æ—Ä–∫–ª–∏–Ω–≥)' },
      { type:'sight', date:'18.01.2026', title:'Sea Life Pattaya' },
      { type:'sea',   date:'25.01.2026', title:'–ü–ª—è–∂ –ü–∞—Ç—Ç–∞–π—è' }
    ];

    // DOM
    const cardsWrap = $('#cards'), skeletons = $('#skeletons'), emptyState = $('#emptyState'), filters = $all('.filter'), tabs = $all('.tab');
    const overlay = $('#overlay'), details = $('#details'), closeBtn = $('#closeBtn'), detailsTitle = $('#detailsTitle'), scheduleList = $('#scheduleList'), resetFilters = $('#resetFilters'), countdownBtn = $('#countdownBtn'), footerVer = $('#appVersionFooter');

    // –í–µ—Ä—Å–∏—è –≤–Ω–∏–∑—É "–ö–æ–Ω—Ç–∞–∫—Ç–æ–≤"
    if (footerVer){ footerVer.textContent = document.body.dataset.version || 'v0.0.0'; }

    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É
    if (overlay){ overlay.style.display='none'; overlay.classList.add('hidden'); overlay.setAttribute('aria-hidden','true'); }
    if (details){ details.style.display='none'; details.classList.add('hidden'); }

    // Helpers
    const add = (hh,mm,addMin)=>{ const d=new Date(2000,0,1,hh,mm,0); d.setMinutes(d.getMinutes()+addMin); return (`0${d.getHours()}`).slice(-2)+':'+(`0${d.getMinutes()}`).slice(-2); };
    const parseTime = (s)=>{ const a=s.split(':'); return {h:+a[0], m:+a[1]}; };
    const parseDMY = (dmy)=>{ const m=/^(\d{2})\.(\d{2})\.(\d{4})$/.exec(dmy); if(!m) return null; return new Date(+m[3],+m[2]-1,+m[1],0,0,0,0); };

    // –ë–ª–∏–∂–∞–π—à–∞—è –±—É–¥—É—â–∞—è –¥–∞—Ç–∞ (UTC‚Äë–ø–æ–ª—É–Ω–æ—á—å)
    function nextFutureDate(list){
      const now = new Date();
      const todayUTC = Date.UTC(now.getFullYear(), now.getMonth(), now.getDate());
      let best = null;
      for (let i=0;i<list.length;i++){
        const d = parseDMY(list[i].date); if(!d) continue;
        const ts = Date.UTC(d.getFullYear(), d.getMonth(), d.getDate());
        if (ts >= todayUTC && (best===null || ts < best)) best = ts;
      }
      return best;
    }

    // –°—á—ë—Ç—á–∏–∫ ¬´–î–æ –ø–æ–µ–∑–¥–∫–∏¬ª
    function updateCountdown(){
      if(!countdownBtn) return;
      if (!activities || activities.length===0){ countdownBtn.textContent='‚ÑπÔ∏è –î–æ–±–∞–≤—å—Ç–µ –¥–∞—Ç—ã –ø–æ–µ–∑–¥–∫–∏'; return; }
      const startTs = nextFutureDate(activities);
      if (startTs===null){ countdownBtn.textContent='üèùÔ∏è –ü–æ–µ–∑–¥–∫–∞ –Ω–∞—á–∞–ª–∞—Å—å'; return; }
      const now = new Date();
      const todayUTC = Date.UTC(now.getFullYear(), now.getMonth(), now.getDate()); // UTC‚Äë–ø–æ–ª—É–Ω–æ—á—å [MDN]
      const diffDays = Math.ceil((startTs - todayUTC)/86400000);
      countdownBtn.textContent = (diffDays>0) ? `‚è≥ –î–æ –ø–æ–µ–∑–¥–∫–∏: ${diffDays} –¥–Ω–µ–π` : 'üéí –ü–æ–µ–∑–¥–∫–∞ —Å–µ–≥–æ–¥–Ω—è';
    }
    updateCountdown(); setInterval(updateCountdown, 3600000); // —Ä–∞–∑ –≤ —á–∞—Å

    // –ò–∫–æ–Ω–∫–∏ –ø–æ —Ç–∏–ø—É
    const ICONS = { sea:['üèñÔ∏è','üåä','üê†','‚õ±Ô∏è','üõ∂'], sight:['üèõÔ∏è','üóø','üó∫Ô∏è','üèØ','üì∏'] };
    const pickIcon = (type, i)=> (ICONS[type]||['üìå'])[ i % (ICONS[type]||['üìå']).length ];

    // –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–Ω—è —Å –∫–æ–Ω–∫—Ä–µ—Ç–∏–∫–æ–π
    function generateSchedule(act){
      const departAt='09:00', travelSea=40, travelSight=30, buf=10;
      const rows=[];
      rows.push(`${departAt} ‚Äî –í—ã—Ö–æ–¥ –∏–∑ –¥–æ–º–∞ (–≤–æ–¥–∞, SPF, —à–ª—è–ø—ã, –Ω–∞–ª–∏—á–Ω—ã–µ)`);
      const travel = (act.type==='sea')?travelSea:travelSight;
      const arr1 = add(parseTime(departAt).h, parseTime(departAt).m, travel);
      if (act.transport && act.transport.length){
        rows.push(`${departAt}‚Äì${arr1} ‚Äî –ö–∞–∫ –¥–æ–±—Ä–∞—Ç—å—Å—è: ${act.transport.join(' / ')}`);
      } else {
        rows.push(`${departAt}‚Äì${arr1} ‚Äî –î–æ—Ä–æ–≥–∞ –ø–æ –º–∞—Ä—à—Ä—É—Ç—É (—É—Ç–æ—á–Ω–∏—Ç—å –Ω–∞ –º–µ—Å—Ç–µ)`);
      }
      rows.push(`10:00 ‚Äî –ü—Ä–∏–±—ã—Ç–∏–µ: ${act.title||act.text||'–õ–æ–∫–∞—Ü–∏—è'}`);
      if (act.gps) rows.push(`‚Äî –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: ${act.gps.lat.toFixed(6)}, ${act.gps.lng.toFixed(6)}`);
      if (act.open) rows.push(`‚Äî –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ${act.open}`);
      if (act.price) rows.push(`‚Äî –í—Ö–æ–¥/—Ü–µ–Ω–æ–≤–æ–π –æ—Ä–∏–µ–Ω—Ç–∏—Ä: ${act.price}`);
      rows.push('10:15‚Äì12:15 ‚Äî –û—Å–Ω–æ–≤–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å/–æ—Å–º–æ—Ç—Ä');
      if (act.lunch && act.lunch.length){
        rows.push(`12:30‚Äì13:30 ‚Äî –û–±–µ–¥: ${act.lunch.join(' / ')}`);
      } else {
        rows.push('12:30‚Äì13:30 ‚Äî –û–±–µ–¥ —Ä—è–¥–æ–º (—Ñ—É–¥–∫–æ—Ä—Ç/–∫–∞—Ñ–µ)');
      }
      if (act.tips && act.tips.length){
        rows.push(`13:40 ‚Äî –°–æ–≤–µ—Ç—ã: ${act.tips.join(' ‚Ä¢ ')}`);
      }
      rows.push('14:00‚Äì15:00 ‚Äî –í–æ–∑–≤—Ä–∞—Ç (—Å–æ–Ω–≥—Ç–µ–æ/—Ç–∞–∫—Å–∏)');
      rows.push('15:00 ‚Äî –û—Ç–¥—ã—Ö/–ø–ª–∞–Ω —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–Ω—è');
      return rows;
    }

    // –ü–æ–∫–∞–∑/—Å–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª–∫–∏
    function showModal(){
      overlay.classList.remove('hidden');
      details.classList.remove('hidden');
      overlay.style.display='block';
      details.style.display='block';
      overlay.setAttribute('aria-hidden','false');
      showBack();
    }
    function hideModal(){
      overlay.classList.add('hidden');
      details.classList.add('hidden');
      overlay.setAttribute('aria-hidden','true');
      overlay.style.display='none';
      details.style.display='none';
      hideBack();
    }

    function openDetails(idx){
      const act=activities[idx]; if(!act) return;
      detailsTitle.textContent=`–î–µ–Ω—å ${idx+1} ‚Ä¢ ${act.date}`;
      scheduleList.innerHTML='';
      const plan=generateSchedule(act);
      for (let i=0;i<plan.length;i++){ const li=document.createElement('li'); li.textContent=plan[i]; scheduleList.appendChild(li); }
      setTimeout(showModal, 0);
    }
    function closeDetails(){ hideModal(); }

    on(overlay,'click', (e)=>{ if(e.target===overlay) closeDetails(); });
    on(closeBtn,'click',(e)=>{ e.preventDefault(); e.stopPropagation(); closeDetails(); });

    // –†–µ–Ω–¥–µ—Ä –∫–∞—Ä—Ç–æ—á–µ–∫ (–±–µ–∑ –ø–æ—Ä—è–¥–∫–æ–≤—ã—Ö –Ω–æ–º–µ—Ä–æ–≤ ‚Äî —Ç–æ–ª—å–∫–æ –∏–∫–æ–Ω–∫–∞ –∏ –¥–∞—Ç–∞)
    function renderCards(list){
      cardsWrap.innerHTML='';
      if (!list || list.length===0){
        emptyState.classList.remove('hidden');
        cardsWrap.classList.remove('hidden');
        cardsWrap.setAttribute('aria-busy','false');
        if (skeletons && skeletons.parentNode){ skeletons.parentNode.removeChild(skeletons); }
        return;
      }
      for (let i=0;i<list.length;i++){
        const a=list[i], card=document.createElement('button');
        card.type='button'; card.className='card '+(a.type||''); card.setAttribute('data-index', String(i));
        const icon = pickIcon(a.type, i);
        card.innerHTML = `<div class="card-header">${icon} ${a.date}</div><div class="card-body">${a.title||a.text||''}</div>`;
        on(card,'click',(e)=>{ e.preventDefault(); e.stopPropagation(); const idx=Number(card.getAttribute('data-index')); if(!isNaN(idx)) openDetails(idx); });
        cardsWrap.appendChild(card);
      }
      emptyState.classList.add('hidden');
      cardsWrap.classList.remove('hidden');
      cardsWrap.setAttribute('aria-busy','false');
      if (skeletons && skeletons.parentNode){ skeletons.parentNode.removeChild(skeletons); }
      // –î–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä (—Ä–µ–∑–µ—Ä–≤)
      on(cardsWrap,'click',(e)=>{ const el=e.target.closest?e.target.closest('.card'):null; if(!el) return; e.preventDefault(); e.stopPropagation(); const i=Number(el.getAttribute('data-index')); if(!isNaN(i)) openDetails(i); });
    }
    renderCards(activities);

    // –í–∫–ª–∞–¥–∫–∏
    function showTab(id){
      const panels=$all('.tab-content'); for (let i=0;i<panels.length;i++) panels[i].classList.add('hidden');
      const p=document.getElementById(id); if(p) p.classList.remove('hidden');
      for (let j=0;j<tabs.length;j++) tabs[j].classList.toggle('active', tabs[j].dataset.tab===id);
    }
    for (let i=0;i<tabs.length;i++){ const btn=tabs[i]; on(btn,'click', ()=>{ showTab(btn.dataset.tab); }); }

    // –§–∏–ª—å—Ç—Ä—ã
    function applyFilter(type){
      for (let i=0;i<filters.length;i++){
        const active=(filters[i].dataset.filter===type)||(type==='all'&&filters[i].dataset.filter==='all');
        filters[i].classList.toggle('active', active);
        filters[i].setAttribute('aria-pressed', active?'true':'false');
      }
      const cards=$all('#cards .card'); let visible=0;
      for (let k=0;k<cards.length;k++){
        const show=(type==='all'||cards[k].classList.contains(type));
        cards[k].style.display=show?'flex':'none';
        if (show) visible++;
      }
      emptyState.classList.toggle('hidden', visible>0);
    }
    for (let i=0;i<filters.length;i++){ const btn=filters[i]; on(btn,'click', ()=> applyFilter(btn.dataset.filter)); }
    on(resetFilters,'click', ()=> applyFilter('all'));

    // –°—Å—ã–ª–∫–∏ –Ω–∞ –±–ª—é–¥–∞ (—Ä–∞–∑–¥–µ–ª ¬´–°–æ–≤–µ—Ç—ã¬ª): –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –≤–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–º –±—Ä–∞—É–∑–µ—Ä–µ Telegram
    document.addEventListener('click', function(e){
      const a = e.target.closest && e.target.closest('.dish-link');
      if (!a) return;
      e.preventDefault();
      const url = a.getAttribute('href');
      if (!url) return;
      if (tg && typeof tg.openLink === 'function'){ tg.openLink(url); } else { window.open(url, '_blank', 'noopener'); }
    }, false);
  });
})();
